(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{3968:function(t,e){t.exports={content:["section",["p","Enter a number within certain range with the mouse or keyboard."],["h2","When To Use"],["p","When a numeric value needs to be provided."]],meta:{category:"Components",type:"Data Entry",title:"InputNumber",cover:"https://gw.alipayobjects.com/zos/alicdn/XOS8qZ0kU/InputNumber.svg",filename:"components/input-number/index.en-US.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#When-To-Use",title:"When To Use"},"When To Use"]],["li",["a",{className:"bisheng-toc-h2",href:"#API",title:"API"},"API"]],["li",["a",{className:"bisheng-toc-h2",href:"#Methods",title:"Methods"},"Methods"]],["li",["a",{className:"bisheng-toc-h2",href:"#Notes",title:"Notes"},"Notes"]],["li",["a",{className:"bisheng-toc-h2",href:"#FAQ",title:"FAQ"},"FAQ"]]],api:["section",["h2","API"],["table",["thead",["tr",["th","Property"],["th","Description"],["th","Type"],["th","Default"],["th","Version"]]],["tbody",["tr",["td","addonAfter"],["td","The label text displayed after (on the right side of) the input field"],["td","ReactNode"],["td","-"],["td"]],["tr",["td","addonBefore"],["td","The label text displayed before (on the left side of) the input field"],["td","ReactNode"],["td","-"],["td"]],["tr",["td","autoFocus"],["td","If get focus when component mounted"],["td","boolean"],["td","false"],["td","-"]],["tr",["td","bordered"],["td","Whether has border style"],["td","boolean"],["td","true"],["td","4.12.0"]],["tr",["td","controls"],["td","Whether to show ",["code","+-"]," controls, or set custom arrows icon"],["td","boolean ","|"," { upIcon?: React.ReactNode; downIcon?: React.ReactNode; }"],["td","-"],["td","4.19.0"]],["tr",["td","decimalSeparator"],["td","Decimal separator"],["td","string"],["td","-"],["td","-"]],["tr",["td","defaultValue"],["td","The initial value"],["td","number"],["td","-"],["td","-"]],["tr",["td","disabled"],["td","If disable the input"],["td","boolean"],["td","false"],["td","-"]],["tr",["td","formatter"],["td","Specifies the format of the value presented"],["td","function(value: number ","|"," string, info: { userTyping: boolean, input: string }): string"],["td","-"],["td","info: 4.17.0"]],["tr",["td","keyboard"],["td","If enable keyboard behavior"],["td","boolean"],["td","true"],["td","4.12.0"]],["tr",["td","max"],["td","The max value"],["td","number"],["td",["a",{title:null,href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER"},"Number.MAX_SAFE_INTEGER"]],["td","-"]],["tr",["td","min"],["td","The min value"],["td","number"],["td",["a",{title:null,href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER"},"Number.MIN_SAFE_INTEGER"]],["td","-"]],["tr",["td","parser"],["td","Specifies the value extracted from formatter"],["td","function(string): number"],["td","-"],["td","-"]],["tr",["td","precision"],["td","The precision of input value. Will use ",["code","formatter"]," when config of ",["code","formatter"]],["td","number"],["td","-"],["td","-"]],["tr",["td","readOnly"],["td","If readonly the input"],["td","boolean"],["td","false"],["td","-"]],["tr",["td","status"],["td","Set validation status"],["td","'error' ","|"," 'warning'"],["td","-"],["td","4.19.0"]],["tr",["td","prefix"],["td","The prefix icon for the Input"],["td","ReactNode"],["td","-"],["td","4.17.0"]],["tr",["td","size"],["td","The height of input box"],["td",["code","large"]," ","|"," ",["code","middle"]," ","|"," ",["code","small"]],["td","-"],["td","-"]],["tr",["td","step"],["td","The number to which the current value is increased or decreased. It can be an integer or decimal"],["td","number ","|"," string"],["td","1"],["td","-"]],["tr",["td","stringMode"],["td","Set value as string to support high precision decimals. Will return string value by ",["code","onChange"]],["td","boolean"],["td","false"],["td","4.13.0"]],["tr",["td","value"],["td","The current value"],["td","number"],["td","-"],["td","-"]],["tr",["td","onChange"],["td","The callback triggered when the value is changed"],["td","function(value: number ","|"," string ","|"," null)"],["td","-"],["td","-"]],["tr",["td","onPressEnter"],["td","The callback function that is triggered when Enter key is pressed"],["td","function(e)"],["td","-"],["td","-"]],["tr",["td","onStep"],["td","The callback function that is triggered when click up or down buttons"],["td","(value: number, info: { offset: number, type: 'up' ","|"," 'down' }) => void"],["td","-"],["td","4.7.0"]]]],["h2","Methods"],["table",["thead",["tr",["th","Name"],["th","Description"]]],["tbody",["tr",["td","blur()"],["td","Remove focus"]],["tr",["td","focus()"],["td","Get focus"]]]],["h2","Notes"],["p","Per issues ",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/21158"},"#21158"],", ",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/17344"},"#17344"],", ",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/9421"},"#9421"],", and ",["a",{title:null,href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number#Using_number_inputs"},"documentation about inputs"],", it appears this community does not support native inclusion of the ",["code",'type="number"']," in the ",["code","<Input />"]," attributes, so please feel free to include it as needed, and be aware that it is heavily suggested that server side validation be utilized, as client side validation can be edited by power users."],["h2","FAQ"],["h3","Why ",["code","value"]," can exceed ",["code","min"]," or ",["code","max"]," in control?"],["p","Developer handle data by their own in control. It will make data out of sync if InputNumber change display value. It also cause potential data issues when use in form."],["h3","Why dynamic change ",["code","min"]," or ",["code","max"]," which makes ",["code","value"]," out of range will not trigger ",["code","onChange"],"?"],["p",["code","onChange"]," is user trigger event. Auto trigger will makes form lib can not detect data modify source."]]}}}]);
